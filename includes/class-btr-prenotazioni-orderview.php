<?phpif (!defined('ABSPATH')) {    exit; // No direct access}// Enqueue admin assets (CSS + React app)/*add_action('admin_enqueue_scripts', function ($hook) {    if ('toplevel_page_btr-prenotazioni' !== $hook) {        return;    }    wp_enqueue_style(        'btr-prenotazioni-admin',        plugin_dir_url(__FILE__) . 'assets/css/admin-order-view.css',        [],        '1.1'    );    wp_enqueue_script(        'btr-prenotazioni-admin-react',        plugin_dir_url(__FILE__) . 'assets/js/admin-order-view.js',        ['wp-element', 'wp-components', 'wp-i18n'],        '1.1',        true    );});*/class BTR_Prenotazioni_OrderView{    public function render_orderlike_view($prenotazione_id)    {        ob_start();        // Recupera l'ordine        $order = wc_get_order($prenotazione_id);        if (!$order) {            return '<p>' . esc_html__('Ordine non trovato.', 'born-to-ride-booking') . '</p>';        }        // Dettagli ordine        $order_status = ucfirst(wc_get_order_status_name($order->get_status()));        $order_date = $order->get_date_created() ? $order->get_date_created()->date('d/m/Y H:i') : __('N/D', 'born-to-ride-booking');        $order_total = $order->get_total();        // Recupera i dati di fatturazione        $billing_first_name = $order->get_billing_first_name();        $billing_last_name = $order->get_billing_last_name();        $billing_company = $order->get_billing_company();        $billing_address_1 = $order->get_billing_address_1();        $billing_address_2 = $order->get_billing_address_2();        $billing_city = $order->get_billing_city();        $billing_postcode = $order->get_billing_postcode();        $billing_state = $order->get_billing_state();        $billing_country = $order->get_billing_country();        $billing_email = $order->get_billing_email();        $billing_phone = $order->get_billing_phone();        // Recupera i dati anagrafici dei partecipanti dall'ordine        // Dal 2024 i dati possono essere salvati con due meta‑key diverse:        $dati_anagrafici = $order->get_meta('_anagrafici', true);        // Se vuoto, prova con la key usata dal preventivo        if ( empty( $dati_anagrafici ) || ! is_array( $dati_anagrafici ) ) {            $dati_anagrafici = $order->get_meta('_anagrafici', true);        }        if ( ! is_array( $dati_anagrafici ) ) {            $dati_anagrafici = [];        }        // Inizializza variabili        $camere_selezionate = [];        $total_persons = 0;        $booking_date = '';        $total_rooms = 0;// Recupera l'elenco delle camere selezionate        $camere_selezionate = [];        foreach ($dati_anagrafici as $persona) {            if (!empty($persona['camera']) && $persona['camera'] !== 'Non assegnata') {                $camera_index = explode('-', $persona['camera'])[0];                $tipo_camera = $persona['camera_tipo'] ?? 'Sconosciuta';                // Aggrega le camere selezionate                if (!isset($camere_selezionate[$camera_index])) {                    $camere_selezionate[$camera_index] = [                        'tipo' => $tipo_camera,                        'quantita' => 0,                    ];                }                $camere_selezionate[$camera_index]['quantita']++;            }        }// Mappa delle camere assegnate con i tipi leggibili        $camera_map = [];        if (!empty($camere_selezionate)) {            foreach ($camere_selezionate as $camera_index => $camera) {                $tipo = $camera['tipo'] ?? 'Sconosciuta';                $quantita = isset($camera['quantita']) ? intval($camera['quantita']) : 0;                for ($i = 1; $i <= $quantita; $i++) {                    $camera_id = "{$camera_index}-{$i}"; // Es. 0-1, 0-2                    $camera_map[$camera_id] = $tipo . ' ' . $i; // Es. "Doppia 1", "Tripla 2"                }            }        }        // Recupera la data dai prodotti nel carrello        $order_items = $order->get_items('line_item');        foreach ($order_items as $item) {            $product = $item->get_product();            if ($product && $product->is_type('variation')) {                $attributes = $product->get_attributes();                if (isset($attributes['pa_date_disponibili'])) {                    $pa_date_disponibili = $attributes['pa_date_disponibili'];                    // Verifica che sia un array e recupera il primo valore disponibile                    if (is_array($pa_date_disponibili)) {                        $booking_date = $pa_date_disponibili[0] ?? '';                    } else {                        $booking_date = $pa_date_disponibili;                    }                    // Interrompe il ciclo una volta trovata la data                    if (!empty($booking_date)) {                        break;                    }                }            }        }        // Calcola il totale delle camere        $total_rooms = count($camere_selezionate);        $total_persons = count($dati_anagrafici);        ?>            <style>                /* Born to Ride – Admin Order View (v1.1) */                :root {                    --btr-primary: #0073aa;                    --btr-accent:  #d9000d;                    --btr-bg:      #ffffff;                    --btr-border:  #e0e0e0;                    --btr-shadow:  rgba(0, 0, 0, 0.06);                }                /* Container */                .btr-container {                    margin: 20px auto;                    max-width: 1200px;                    background: var(--btr-bg);                    border: 1px solid var(--btr-border);                    border-radius: 10px;                    box-shadow: 0 3px 6px var(--btr-shadow);                    padding: 20px;                }                .btr-container.no-style {                    border: none;                    box-shadow: none;                    padding: 0;                }                /* Header */                .btr-header {                    border-bottom: 2px solid #f0f0f0;                    margin-bottom: 20px;                    padding-bottom: 10px;                    display: flex;                    justify-content: space-between;                    align-items: center;                }                .btr-header h2 {                    margin: 0;                    font-size: 1.8rem;                    color: #333;                }                .btr-order-status {                    font-size: 1.1rem;                    color: var(--btr-accent);                    font-weight: 600;                }                /* Sections */                .btr-section { margin-top: 30px; }                .btr-section h3 {                    font-size: 1.25rem;                    margin-bottom: 12px;                    color: #333;                    border-bottom: 2px solid #ddd;                    padding-bottom: 5px;                }                /* Tables */                .btr-section table {                    width: 100%;                    border-collapse: collapse;                    margin-bottom: 25px;                }                .btr-section table th,                .btr-section table td {                    padding: 10px 12px;                    border: 1px solid var(--btr-border);                    text-align: left;                    vertical-align: top;                }                .btr-section table th {                    background: #f7f7f7;                    font-weight: 600;                }                .btr-section table tbody tr:nth-child(even) { background: #fafafa; }                .btr-section table tbody tr:hover        { background: #f1f7ff; }                .btr-highlight { color: var(--btr-accent); font-weight: 700; }                /* Responsive tables */                @media (max-width: 768px) {                    .btr-section table {                        display: block;                        overflow-x: auto;                        white-space: nowrap;                    }                }                /* Timeline */                .btr-timeline {                    border-left: 2px solid var(--btr-primary);                    margin: 20px 0;                    padding: 10px 0;                    position: relative;                }                .btr-timeline-item {                    margin-bottom: 15px;                    padding-left: 20px;                    position: relative;                }                .btr-timeline-item:last-child { margin-bottom: 0; }                .btr-timeline-dot {                    position: absolute;                    top: 10px;                    left: -7px;                    width: 10px;                    height: 10px;                    background: var(--btr-primary);                    border-radius: 50%;                    border: 2px solid #fff;                }                .btr-timeline-date  { font-size: .9rem;  font-weight: 600; color: #333; }                .btr-timeline-meta  { font-size: .85rem; color: #666; margin-top: 3px; }                .btr-timeline-meta .note-private { color: var(--btr-accent); font-weight: 700; }                .btr-timeline-content {                    background: #f9f9f9;                    border: 1px solid #ddd;                    border-radius: 4px;                    padding: 10px 15px;                    font-size: .95rem;                    color: #333;                    box-shadow: 0 1px 3px var(--btr-shadow);                }                .btr-timeline-content p { margin: 0; }                /* Bottone stile React/Stripe */                .btr-button-stripe {                    display: inline-flex;                    align-items: center;                    gap: 8px;                    padding: 2px 15px;                    /* background: linear-gradient(90deg, #635bff 0%, #6e75ff 100%); */                    background: #2271b1;                    color: #ffffff !important;                    font-size: 11px;                    font-weight: 500;                    border: none;                    text-transform: uppercase;                    border-radius: 4px;                    text-decoration: none;                    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);                    transition: all 0.2s ease;                    margin-left: 1em;                    letter-spacing: .5px;                }                .btr-button-stripe:hover {                    box-shadow: 0 6px 8px rgba(0,0,0,0.15);                    transform: translateY(-1px);                }                .btr-button-stripe svg {                    stroke: #ffffff;                }            </style>        <div class="btr-container no-style">            <p>                <a href="<?php echo admin_url('admin.php?page=btr-prenotazioni'); ?>" class="button button-secondary">                    &larr; <?php esc_html_e('Torna alla lista delle prenotazioni', 'born-to-ride-booking'); ?>                </a>            </p>        </div>        <div class="btr-container">            <!-- React root -->            <div id="btr-order-view-app"></div>            <script type="application/json" id="btr-order-data">            <?php                $order_data = [                    'id'           => $prenotazione_id,                    'status'       => $order_status,                    'date'         => $order_date,                    'total'        => $order_total,                    'billing'      => [                        'first_name' => $billing_first_name,                        'last_name'  => $billing_last_name,                        'company'    => $billing_company,                        'address_1'  => $billing_address_1,                        'address_2'  => $billing_address_2,                        'city'       => $billing_city,                        'postcode'   => $billing_postcode,                        'state'      => $billing_state,                        'country'    => $billing_country,                        'email'      => $billing_email,                        'phone'      => $billing_phone,                    ],                    'partecipanti' => $dati_anagrafici,                    'camere'       => $camere_selezionate,                    'booking_date' => $booking_date,                ];                echo wp_json_encode($order_data, JSON_HEX_TAG | JSON_HEX_AMP | JSON_UNESCAPED_UNICODE);            ?>            </script>            <!-- Header -->            <div class="btr-header">                <h2><?php echo sprintf(__('Dettagli Prenotazione #%d', 'born-to-ride-booking'), $prenotazione_id); ?></h2>                <span class="btr-order-status"><?php echo esc_html($order_status); ?></span>            </div>            <!-- Dati Ordine -->            <div class="btr-section">                <h3><?php esc_html_e('Dettagli Ordine', 'born-to-ride-booking'); ?></h3>                <table>                    <tr>                        <th><?php esc_html_e('Numero Ordine', 'born-to-ride-booking'); ?></th>                        <td><strong>#<?php echo esc_html($prenotazione_id); ?></strong></td>                    </tr>                    <?php                    $preventivo_id = $order->get_meta('_preventivo_id');                    $pdf_path = $order->get_meta('_pdf_path');                    if ($pdf_path && strpos($pdf_path, '/wp-content/uploads/') !== false) {                        $pdf_path = content_url(str_replace(ABSPATH . 'wp-content/', '', $pdf_path));                    }                    if (!empty($preventivo_id)) : ?>                    <tr>                        <th><?php esc_html_e('ID Preventivo', 'born-to-ride-booking'); ?></th>                        <td>                            <a href="/wp-admin/post.php?post=13370&action=edit" target="_blank"><strong>#<?php echo esc_html($preventivo_id); ?></strong></a>                            <a href="<?=$pdf_path;?>" target="_blank" class="btr-button-stripe"><?php esc_html_e('Visualizza PDF', 'born-to-ride-booking'); ?></a>                        </td>                    </tr>                    <?php endif; ?>                    <tr>                        <th><?php esc_html_e('Data Ordine', 'born-to-ride-booking'); ?></th>                        <td><?php echo esc_html($order_date); ?></td>                    </tr>                    <tr>                        <th><?php esc_html_e('Totale Ordine', 'born-to-ride-booking'); ?></th>                        <td class="btr-highlight">€<?php echo number_format((float)($order_total ?: 0), 2); ?></td>                    </tr>                    <tr>                        <th><?php esc_html_e('Totale Persone', 'born-to-ride-booking'); ?></th>                        <td><?php echo esc_html($total_persons); ?></td>                    </tr>                    <tr>                        <th><?php esc_html_e('Totale Camere', 'born-to-ride-booking'); ?></th>                        <td><?php echo esc_html($total_rooms); ?></td>                    </tr>                    <?php                    $nome_paccehtto = $order->get_meta('_nome_pacchetto');                    ?>                    <tr>                        <th><?php esc_html_e('Nome pacchetto', 'born-to-ride-booking'); ?></th>                        <td><strong><?php echo esc_html($nome_paccehtto ?: __('Non disponibile', 'born-to-ride-booking')); ?></strong></td>                    </tr>                    <tr>                        <th><?php esc_html_e('Data Disponibile', 'born-to-ride-booking'); ?></th>                        <td><?php echo esc_html($booking_date ?: __('Non disponibile', 'born-to-ride-booking')); ?></td>                    </tr>                </table>            </div>            <!-- Dati di Fatturazione -->            <div class="btr-section">                <h3><?php esc_html_e('Dati di Fatturazione', 'born-to-ride-booking'); ?></h3>                <table>                    <thead>                    <tr>                        <th><?php esc_html_e('Nome', 'born-to-ride-booking'); ?></th>                        <th><?php esc_html_e('Azienda', 'born-to-ride-booking'); ?></th>                        <th><?php esc_html_e('Indirizzo', 'born-to-ride-booking'); ?></th>                        <th><?php esc_html_e('Città', 'born-to-ride-booking'); ?></th>                        <th><?php esc_html_e('CAP', 'born-to-ride-booking'); ?></th>                        <th><?php esc_html_e('Stato', 'born-to-ride-booking'); ?></th>                        <th><?php esc_html_e('Paese', 'born-to-ride-booking'); ?></th>                        <th><?php esc_html_e('Email', 'born-to-ride-booking'); ?></th>                        <th><?php esc_html_e('Telefono', 'born-to-ride-booking'); ?></th>                    </tr>                    </thead>                    <tbody>                    <tr>                        <td><?php echo esc_html($billing_first_name . ' ' . $billing_last_name); ?></td>                        <td><?php echo esc_html($billing_company ?: __('N/D', 'born-to-ride-booking')); ?></td>                        <td><?php echo esc_html($billing_address_1 . ' ' . $billing_address_2); ?></td>                        <td><?php echo esc_html($billing_city); ?></td>                        <td><?php echo esc_html($billing_postcode); ?></td>                        <td><?php echo esc_html($billing_state); ?></td>                        <td><?php echo esc_html($billing_country); ?></td>                        <td><?php echo esc_html($billing_email); ?></td>                        <td><?php echo esc_html($billing_phone); ?></td>                    </tr>                    </tbody>                </table>            </div>        <?php            // Debug: stampa tutte le meta values via WC_Order            $meta_data = $order->get_meta_data();            //printr(print_r($meta_data, true));            ?>            <!-- Dati Anagrafici -->            <div class="btr-section">                <h3><?php esc_html_e('Dati Anagrafici', 'born-to-ride-booking'); ?></h3>                <table>                    <thead>                    <tr>                        <th><?php esc_html_e('Nome', 'born-to-ride-booking'); ?></th>                        <th><?php esc_html_e('Cognome', 'born-to-ride-booking'); ?></th>                        <th><?php esc_html_e('Email', 'born-to-ride-booking'); ?></th>                        <th><?php esc_html_e('Telefono', 'born-to-ride-booking'); ?></th>                        <th><?php esc_html_e('Data di nascita', 'born-to-ride-booking'); ?></th>                        <th><?php esc_html_e('Città di nascita', 'born-to-ride-booking'); ?></th>                        <th><?php esc_html_e('Città di residenza', 'born-to-ride-booking'); ?></th>                        <th><?php esc_html_e('Provincia di residenza', 'born-to-ride-booking'); ?></th>                        <th><?php esc_html_e('Camera', 'born-to-ride-booking'); ?></th>                    </tr>                    </thead>                    <tbody>                    <?php foreach ($dati_anagrafici as $persona):                        $camera_id = $persona['camera'] ?? 'Non assegnata';                        $camera_display = $camera_map[$camera_id] ?? 'Non assegnata';                        ?>                        <tr>                            <td><?php echo esc_html($persona['nome'] ?? '---'); ?></td>                            <td><?php echo esc_html($persona['cognome'] ?? '---'); ?></td>                            <td><?php echo esc_html($persona['email'] ?? '---'); ?></td>                            <td><?php echo esc_html($persona['telefono'] ?? '---'); ?></td>                            <td><?php echo esc_html($persona['data_nascita'] ?? '---'); ?></td>                            <td><?php echo esc_html($persona['citta_nascita'] ?? '---'); ?></td>                            <td><?php echo esc_html($persona['citta_residenza'] ?? '---'); ?></td>                            <td><?php echo esc_html($persona['provincia_residenza'] ?? '---'); ?></td>                            <td class="btr-highlight"><?php echo esc_html($camera_display); ?></td>                        </tr>                    <?php endforeach; ?>                    </tbody>                </table>                <!-- Dettagli aggiuntivi per partecipante: assicurazioni e costi extra -->                <div class="btr-section">                    <h3><?php esc_html_e( 'Dettagli Aggiuntivi per Partecipante', 'born-to-ride-booking' ); ?></h3>                    <table>                        <thead>                            <tr>                                <th><?php esc_html_e( 'Partecipante',  'born-to-ride-booking' ); ?></th>                                <th colspan="2"><?php esc_html_e( 'Dettagli', 'born-to-ride-booking' ); ?></th>                            </tr>                        </thead>                        <tbody>                        <?php foreach ( $dati_anagrafici as $persona ) : ?>                            <?php                                $full_name = trim( ( $persona['nome'] ?? '' ) . ' ' . ( $persona['cognome'] ?? '' ) );                                $email     = $persona['email'] ?? '';                                // --- costruisci lista assicurazioni ---                                $ass_output = '<em>' . esc_html__('Nessuna assicurazione selezionata.', 'born-to-ride-booking') . '</em>';                                if ( ! empty( $persona['assicurazioni'] ) && is_array($persona['assicurazioni']) ) {                                    $ass_output = '<ul style="margin: 4px 0 8px 18px;">';                                    foreach ( $persona['assicurazioni'] as $slug => $val ) {                                        if ( $val !== '1' ) continue;                                        $ass = $persona['assicurazioni_dettagliate'][$slug] ?? null;                                        if ( ! $ass ) continue;                                        $descr = $ass['descrizione'] ?? $slug;                                        $imp   = number_format_i18n( floatval( $ass['importo'] ?? 0 ), 2 );                                        $ass_output .= '<li>' . esc_html( $descr ) . ' – €' . $imp . '</li>';                                    }                                    $ass_output .= '</ul>';                                }                                // --- costruisci lista costi extra ---                                $extra_output = '<em>' . esc_html__('Nessun costo extra selezionato.', 'born-to-ride-booking') . '</em>';                                if ( ! empty( $persona['costi_extra_dettagliate'] ) ) {                                    $extra_output  = '<ul style="margin: 4px 0 8px 18px;">';                                    foreach ( $persona['costi_extra_dettagliate'] as $ex ) {                                        $nome = $ex['nome'] ?? ($ex['descrizione'] ?? '');                                        $imp  = number_format_i18n( floatval( $ex['importo'] ?? 0 ), 2 );                                        $extra_output .= '<li>' . esc_html( $nome ) . ' – €' . $imp . '</li>';                                    }                                    $extra_output .= '</ul>';                                }                            ?>                            <tr>                                <td>                                    <?php echo esc_html( $full_name ); ?><br>                                    <small><?php echo esc_html( $email ); ?></small>                                </td>                                <td style="width: 45%; vertical-align: top;">                                    <div style="margin-bottom:10px;">                                        <div style="font-weight:600;margin-bottom:2px;"><?php esc_html_e('Assicurazioni','born-to-ride-booking'); ?></div>                                        <?php echo $ass_output; // phpcs:ignore WordPress.Security.EscapeOutput ?>                                    </div>                                </td>                                <td style="width: 45%; vertical-align: top;">                                    <div style="margin-bottom:10px;">                                        <div style="font-weight:600;margin-bottom:2px;"><?php esc_html_e('Costi Extra','born-to-ride-booking'); ?></div>                                        <?php echo $extra_output; // phpcs:ignore WordPress.Security.EscapeOutput ?>                                    </div>                                </td>                            </tr>                        <?php endforeach; ?>                        </tbody>                    </table>                </div>            </div>            <!-- Camere Prenotate -->            <div class="btr-section">                <h3><?php esc_html_e('Camere Prenotate', 'born-to-ride-booking'); ?></h3>                <table>                    <thead>                    <tr>                        <th>ID Variante</th>                        <th>Camera</th>                        <th>Data</th>                        <th>Quantità</th>                        <th>Prezzo Regolare</th>                        <th>Prezzo Scontato</th>                        <th>Supplemento</th>                        <th>Prezzo per Persona</th>                        <th>Capacità</th>                        <th>Totale Camera</th>                    </tr>                    </thead>                    <tbody>                    <?php                    $order_items = $order->get_items('line_item'); // Recupera tutti gli item del carrello                    if (!empty($order_items)) {                        foreach ($order_items as $item_id => $item) {                            // Skip insurance and extra items (handled in their own sections)                            if ($item->get_meta('from_anagrafica') || $item->get_meta('from_extra')) {                                continue;                            }                            // Recupera il prodotto e verifica che sia effettivamente una camera                            $product = $item->get_product();                            if ( ! $product ) {                                continue; // prodotto non valido                            }                            // Verifica la presenza dell'attributo "pa_tipologia_camere"                            $attributes = $product->get_attributes();                            if ( ! isset( $attributes['pa_tipologia_camere'] ) ) {                                // Il prodotto non è una camera: lo saltiamo                                continue;                            }                            // Recupera l'ID del prodotto e della variante                            $product_id = $item->get_product_id();                            $variation_id = $item->get_variation_id();                            //printr($product);                            if ($product) {                                $product_name = $item->get_name();                                $quantity = $item->get_quantity();                                $regular_price = $product->get_regular_price();                                $sale_price = $product->get_sale_price();                                $stock_quantity = $product->get_stock_quantity();                                // Recupera i metadati personalizzati                                $meta_data = $item->get_meta_data();                                $price_per_person = 0;                                $supplement = 0;                                $capacity = 0;                                foreach ($meta_data as $meta) {                                    if ($meta->key === 'prezzo_per_persona') {                                        $price_per_person = (float)$meta->value;                                    } elseif ($meta->key === 'supplemento') {                                        $supplement = (float)$meta->value;                                    } elseif ($meta->key === 'number_of_persons') {                                        $capacity = (int)$meta->value;                                    }                                }                                // Ottieni tutti gli attributi del prodotto                                // $attributes = $product->get_attributes(); // <-- rimosso, già ottenuto sopra                                $camera = isset($attributes['pa_tipologia_camere']) ? (is_object($attributes['pa_tipologia_camere']) ? wc_attribute_label($attributes['pa_tipologia_camere']->get_name()) : (string)$attributes['pa_tipologia_camere']) : '—';                                $data = isset($attributes['pa_date_disponibili']) ? (is_object($attributes['pa_date_disponibili']) ? wc_attribute_label($attributes['pa_date_disponibili']->get_name()) : (string)$attributes['pa_date_disponibili']) : '—';                                // Calcola il totale della camera                                $total_room_price = ($price_per_person + $supplement * $capacity * $quantity);                                $class_sbarra = $sale_price?'style="text-decoration: line-through;"':'';                                $regularPrice = $sale_price ? '<span class="regular_price" style="text-decoration: line-through;">€' . number_format((float)($regular_price ?: 0), 2) .                                    '</span>':'<strong>€' . number_format((float)($regular_price ?: 0), 2).'</strong>';                                $salePrice = $sale_price ? '<strong>€' . number_format((float)($sale_price ?: 0), 2) . '</strong>' : '';                                // Stampa i dettagli della riga                                echo '<tr>';                                echo '<td>#' . esc_html($variation_id ? $variation_id : $product_id) . '</td>';                                echo '<td>' . esc_html($camera) . '</td>';                                echo '<td>' . esc_html($data) . '</td>';                                echo '<td>' . esc_html($quantity) . '</td>';                                echo '<td>' . $regularPrice . '</td>';                                echo '<td>' . $salePrice.'</td>';                                echo '<td>€' . number_format((float)$supplement, 2) . '</td>';                                echo '<td>€' . number_format((float)$price_per_person, 2) . '</td>';                                echo '<td>' . esc_html($capacity) . '</td>';                                echo '<td><strong style="color: #d9000d;">€' . number_format((float)$total_room_price, 2) . '</strong></td>';                                echo '</tr>';                            }                        }                    } else {                        echo '<tr><td colspan="12">' . __('Nessuna camera prenotata.', 'born-to-ride-booking') . '</td></tr>';                    }                    ?>                    </tbody>                </table>            </div>            <!-- Totale Prenotazione -->            <?php            $total_assicurazioni = 0;            $total_extra = 0;            foreach ($dati_anagrafici as $persona) {                if (!empty($persona['assicurazioni_dettagliate'])) {                    foreach ($persona['assicurazioni_dettagliate'] as $a) {                        $total_assicurazioni += floatval($a['importo'] ?? 0);                    }                }                if (!empty($persona['costi_extra_dettagliate'])) {                    foreach ($persona['costi_extra_dettagliate'] as $e) {                        $total_extra += floatval($e['importo'] ?? 0);                    }                }            }            ?>            <div class="btr-section">                <h3><?php esc_html_e('Totale Prenotazione', 'born-to-ride-booking'); ?></h3>                <table>                    <tr>                        <th><?php esc_html_e('Totale Partecipanti', 'born-to-ride-booking'); ?></th>                        <td><?php echo esc_html($total_persons); ?></td>                    </tr>                    <tr>                        <th><?php esc_html_e('Totale Camere', 'born-to-ride-booking'); ?></th>                        <td><?php echo esc_html($total_rooms); ?></td>                    </tr>                    <tr>                        <th><?php esc_html_e('Totale Assicurazioni', 'born-to-ride-booking'); ?></th>                        <td>€<?php echo number_format($total_assicurazioni, 2); ?></td>                    </tr>                    <tr>                        <th><?php esc_html_e('Totale Costi Extra', 'born-to-ride-booking'); ?></th>                        <td>€<?php echo number_format($total_extra, 2); ?></td>                    </tr>                    <tr>                        <th><?php esc_html_e('Totale Ordine', 'born-to-ride-booking'); ?></th>                        <td class="btr-highlight">€<?php echo number_format((float)($order_total ?: 0), 2); ?></td>                    </tr>                </table>            </div>            <div class="btr-section">                <h3><?php esc_html_e('Note dell\'Ordine', 'born-to-ride-booking'); ?></h3>                <div class="btr-timeline">                    <?php                    // Recupera le note dell'ordine                    $order_notes = wc_get_order_notes(array(                        'order_id' => $prenotazione_id,                    ));                    if (!empty($order_notes)) {                        foreach ($order_notes as $note) {                            $is_private = $note->customer_note ? '<span class="note-private">' . esc_html__('Privata', 'born-to-ride-booking') . '</span>' : '<span>' . esc_html__('Pubblica', 'born-to-ride-booking') . '</span>';                            ?>                            <div class="btr-timeline-item">                                <div class="btr-timeline-dot"></div>                                <div class="btr-timeline-date">                                    <?php echo esc_html(wc_format_datetime($note->date_created)); ?>                                </div>                                <div class="btr-timeline-meta">                                    <?php esc_html_e('Autore:', 'born-to-ride-booking'); ?> <?php echo esc_html($note->added_by); ?> - <?php echo $is_private; ?>                                </div>                                <div class="btr-timeline-content">                                    <?php echo wp_kses_post(wpautop($note->content)); ?>                                </div>                            </div>                            <?php                        }                    } else {                        ?>                        <div class="btr-timeline-item">                            <div class="btr-timeline-dot"></div>                            <div class="btr-timeline-content">                                <p><?php esc_html_e('Nessuna nota presente.', 'born-to-ride-booking'); ?></p>                            </div>                        </div>                        <?php                    }                    ?>                </div>            </div>        </div>        <?php        return ob_get_clean();    }}